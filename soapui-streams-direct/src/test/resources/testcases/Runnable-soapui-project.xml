<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="48044bbf-7838-4a4a-92b3-c42392df584a" activeEnvironment="Default" name="Runnable" resourceRoot="" soapui-version="5.5.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="42207c31-5d39-458a-8c3a-334e55ebac0f" wadlVersion="http://wadl.dev.java.net/2009/02" name="Restservice" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://localhost:8080</con:endpoint></con:endpoints><con:resource name="resource" path="/resource" id="33325ad3-3b45-4c01-98e7-0350673e39f4"><con:settings/><con:parameters/><con:resource name="child" path="{template}" id="ccf69178-1987-4f45-a1f1-b7e934431aef"><con:settings/><con:parameters><con:parameter><con:name>template</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="GET" id="62a3abd0-dd51-46b1-af57-af3791906217" method="GET"><con:settings/><con:parameters/><con:request name="Request 1" id="4d4f495c-6bcf-4a0d-9a26-a4db1196800f" mediaType="application/json"><con:settings/><con:endpoint>http://localhost:8080</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="template" value="${#Project#projectProperty}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>template</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="mock" path="mock" id="ac73a4bb-5c85-4768-916b-0a20ed45b92d"><con:settings/><con:parameters/><con:method name="POST" id="c7c3a45f-1293-44f3-9bba-2e8276627fc5" method="POST"><con:settings/><con:parameters/><con:request name="postResource" id="d36c6e7c-2555-4f15-9201-2476e986b293" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8080</con:endpoint><con:request>{"post":"post"}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:method name="GET" id="e8e951ed-1f63-4357-b9e3-40ff0ec525f3" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="getResource" id="a788ff59-fa16-4aea-8ce3-8a7302d23585" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8080</con:endpoint><con:request/><con:originalUri>http://localhost/resource</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:testSuite id="ab791bbe-386d-4236-82be-abe951a392e0" name="suite"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="9e8444c7-d45b-4c9a-a5a4-ba2b60e8a748" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="case" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="c9ad7737-a0fb-44c8-bcb5-9bdcb7236c36"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>key</con:name><con:value>keyValue</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="getResource" id="c409cfe4-cc57-43ec-9184-68bb45e113ba"><con:settings/><con:config service="Restservice" resourcePath="/resource" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getResource" id="a788ff59-fa16-4aea-8ce3-8a7302d23585" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8080</con:endpoint><con:request/><con:originalUri>http://localhost/resource</con:originalUri><con:assertion type="JsonPath Match" id="e1b12caf-896f-466d-9d49-44d20580e2ae" name="JsonPath Match"><con:configuration><path>$.response</path><content>mock</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="transfer" id="5c9c4aae-1543-4a26-b1e3-94a7c31066a9"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>response</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getResource</con:sourceStep><con:sourcePath>$.response</con:sourcePath><con:targetType>projectProperty</con:targetType><con:targetStep>#Project#</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>responseToSuite</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getResource</con:sourceStep><con:sourcePath>$.response</con:sourcePath><con:targetType>suiteProperty</con:targetType><con:targetStep>#TestSuite#</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>responseToCase</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getResource</con:sourceStep><con:sourcePath>$.response</con:sourcePath><con:targetType>caseProperty</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="postResource" id="42143bc4-c8c4-427c-af2a-1cd4fe588e1d"><con:settings/><con:config service="Restservice" resourcePath="/resource/mock" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="postResource" id="d36c6e7c-2555-4f15-9201-2476e986b293" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8080</con:endpoint><con:request>{"post":"post"}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>caseProperty</con:name><con:value>mock</con:value></con:property></con:properties></con:testCase><con:properties><con:property><con:name>suiteProperty</con:name><con:value>mock</con:value></con:property></con:properties></con:testSuite><con:restMockService id="d5cc21d1-907f-4445-821c-831e3350de42" port="8080" path="/" host="DESKTOP-LD9V7JS" name="restMockService"><con:settings/><con:properties/><con:restMockAction name="/resource" method="GET" resourcePath="/resource" id="952040ff-5637-4f40-9111-32c4160beda6"><con:settings/><con:defaultResponse>Response</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response" id="e2acc69c-7498-4b0a-9c4d-5f23170a3a49" httpResponseStatus="200"><con:settings/><con:responseContent>{ 
   "response" : "mock",
   "uuid" : "${=java.util.UUID.randomUUID()}" 
}</con:responseContent></con:response></con:restMockAction><con:restMockAction name="/resource/mock" method="POST" resourcePath="/resource/mock" id="5b1b7b37-7340-4125-b5e8-dca6cda02d0d"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response 1" id="7c59b63f-a36b-48a8-9c99-1d270bce8f8d" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{ "post" : "response" } </con:responseContent></con:response></con:restMockAction></con:restMockService><con:properties><con:property><con:name>projectProperty</con:name><con:value>mock</con:value></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>